{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","reduce","stateObj","goods","initialState","getSelectedGoods","activeGoods","Object","keys","filter","length","jointByAnd","splice","join","jointAll","concat","includes","changeGoodState","good","setState","prevState","clearSelection","isSelectedGoodsExist","values","find","stateItem","className","this","map","classNames","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6QAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUIC,E,4MACJC,MAAeF,EAAgBG,QAAO,SAACC,EAAiBC,GACtD,OAAO,2BAAKD,GAAZ,kBAAuBC,GAAQ,MAC9B,I,EAEHC,a,eAA2B,EAAKJ,O,EAEhCK,iBAAmB,WACjB,IAAMC,EAAcC,OAAOC,KAAK,EAAKR,OAAOS,QAAO,SAAAN,GAAK,OAAI,EAAKH,MAAMG,MAEvE,GAAIG,EAAYI,OAAQ,CACtB,IAAMC,EAAaL,EAAYM,QAAQ,GAAGC,KAAK,SACzCC,EAAWR,EAAYS,OAAOJ,GAAYE,KAAK,MAErD,OAAOF,EAAWK,SAAS,OACvBF,EAASC,OAAO,kBAChBD,EAASC,OAAO,gBAGtB,MAAO,qB,EAGTE,gBAAkB,SAACC,GACjB,EAAKC,UAAS,SAAAC,GAAS,kCAClBA,GADkB,kBAEpBF,GAAQE,EAAUF,S,EAIvBG,eAAiB,WACf,EAAKF,SAAL,eACK,EAAKf,gB,EAIZkB,qBAAuB,WACrB,OAAOf,OAAOgB,OAAO,EAAKvB,OAAOwB,MAAK,SAAAC,GAAS,OAAIA,OAAc,G,4CAGnE,WAAU,IAAD,OACP,OACE,sBAAKC,UAAU,MAAf,UACE,6BAAKC,KAAKtB,qBACV,oBAAIqB,UAAU,aAAd,SACG5B,EAAgB8B,KAAI,SAAAV,GACnB,OACE,qBACEQ,UAAWG,IAAW,CACpB,oBAAoB,EACpB,2BAA4B,EAAK7B,MAAMkB,KAH3C,UAME,+BAAOA,IACN,IACD,wBACEY,KAAK,SACLC,QAAS,WACP,EAAKd,gBAAgBC,IAHzB,SAMI,EAAKlB,MAAMkB,GAAgB,SAAR,gBAO9BS,KAAKL,wBACA,wBAAQQ,KAAK,SAASC,QAASJ,KAAKN,eAApC,sB,GApEIW,IAAMC,WA0ETlC,IC/FfmC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bd03abd1.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ntype GoodItem = typeof goodsFromServer[number];\ninterface State {\n  [key: GoodItem]: boolean;\n}\n\nclass App extends React.Component<Props, State> {\n  state: State = goodsFromServer.reduce((stateObj: State, goods: GoodItem) => {\n    return { ...stateObj, [goods]: false };\n  }, {});\n\n  initialState: State = { ...this.state };\n\n  getSelectedGoods = (): string => {\n    const activeGoods = Object.keys(this.state).filter(goods => this.state[goods]);\n\n    if (activeGoods.length) {\n      const jointByAnd = activeGoods.splice(-2).join(' and ');\n      const jointAll = activeGoods.concat(jointByAnd).join(', ');\n\n      return jointByAnd.includes('and')\n        ? jointAll.concat(' are  selected')\n        : jointAll.concat(' is selected');\n    }\n\n    return 'No goods selected';\n  };\n\n  changeGoodState = (good: GoodItem): void => {\n    this.setState(prevState => ({\n      ...prevState,\n      [good]: !prevState[good],\n    }));\n  };\n\n  clearSelection = (): void => {\n    this.setState({\n      ...this.initialState,\n    });\n  };\n\n  isSelectedGoodsExist = (): boolean => {\n    return Object.values(this.state).find(stateItem => stateItem) || false;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>{this.getSelectedGoods()}</h1>\n        <ul className=\"goods-list\">\n          {goodsFromServer.map(good => {\n            return (\n              <li\n                className={classNames({\n                  'goods-list__item': true,\n                  'goods-list__item--active': this.state[good],\n                })}\n              >\n                <span>{good}</span>\n                {' '}\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    this.changeGoodState(good);\n                  }}\n                >\n                  {!this.state[good] ? 'Add' : 'Remove'}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n\n        {this.isSelectedGoodsExist()\n          && (<button type=\"button\" onClick={this.clearSelection}>X</button>)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}